{"version":3,"file":"circleTool-ChdIENMF.js","names":["message: string","line: number","input: string","filePath: string","input: string | InputReader","values: Vector[]","properties: Record<string, GameValue>","objects: GameObject[]","_config: Partial<Config>","result: Array<CircleEntry>","point: {x: number, y: number, z: number}","q: Quaternion","q1: Quaternion","q2: Quaternion","num: number","circle: Array<CircleEntry>","outputItems: Array<string>"],"sources":["../../../analyze/src/GameConfigParser/errors.ts","../../../analyze/src/GameConfigParser/input-reader.ts","../../../analyze/src/GameConfigParser/parser.ts","../../../analyze/src/generateCircle/generateCircle.ts","../../../analyze/src/generateCircle/generateCircleToString.ts","../../src/circle/circleTool.ts"],"sourcesContent":["export class ParseError extends Error {\n  line: number;\n    \n  constructor(message: string, line: number) {\n    super(`Line ${line}: ${message}`);\n    this.line = line;\n  }\n}\n","import { ParserPosition } from \"./types\";\n\nexport class InputReader {\n  private input: string;\n  pos: number;\n  line: number;\n\n  constructor(input: string) {\n    this.input = input;\n    this.pos = 0;\n    this.line = 1;\n  }\n\n  current(): string | null {\n    return this.pos < this.input.length ? this.input[this.pos] : null;\n  }\n\n  advance(): InputReader {\n    if (this.current() === \"\\n\") this.line++;\n    this.pos++;\n    return this;\n  }\n\n  skipWhitespace(): InputReader {\n    while (this.current() && /[\\s\\t\\n\\r]/.test(this.current()!)) {\n      this.advance();\n    }\n    return this;\n  }\n\n  getPosition(): ParserPosition {\n    return {\n      pos: this.pos,\n      line: this.line,\n      current: this.current(),\n    };\n  }\n\n  static async fromFile(filePath: string): Promise<InputReader> {\n    // In Node.js:\n    // const fs = require('fs');\n    // const content = fs.readFileSync(filePath, 'utf8');\n    // return new InputReader(content);\n\n    // For browser:\n    const response = await fetch(filePath);\n    const content = await response.text();\n    return new InputReader(content);\n  }\n}\n","import { GameObject, GameValue, Vector, ParserPosition } from \"./types\";\nimport { ParseError } from \"./errors\";\nimport { InputReader } from \"./input-reader\";\n\nexport class GameConfigParser {\n  private reader: InputReader;\n\n  constructor(input: string | InputReader) {\n    this.reader = input instanceof InputReader ? input : new InputReader(input);\n  }\n\n  private parseIdentifier(): string {\n    let result = \"\";\n    while (this.reader.current() && /[a-zA-Z0-9_]/.test(this.reader.current()!)) {\n      result += this.reader.current();\n      this.reader.advance();\n    }\n    if (result.length === 0) {\n      throw new ParseError(\"Expected identifier\", this.reader.line);\n    }\n    return result;\n  }\n\n  private parseString(): string {\n    this.reader.advance(); // Skip opening quote\n    let result = \"\";\n\n    while (this.reader.current() && this.reader.current() !== '\"') {\n      result += this.reader.current();\n      this.reader.advance();\n    }\n\n    if (this.reader.current() !== '\"') {\n      throw new ParseError(\"Unterminated string\", this.reader.line);\n    }\n\n    this.reader.advance(); // Skip closing quote\n    return result;\n  }\n\n  private parseVectorContents(): Vector[] {\n    const values: Vector[] = [];\n    let currentValue = \"\";\n\n    const pushCurrentValue = () => {\n      if (currentValue.trim()) {\n        values.push(currentValue.trim());\n        currentValue = \"\";\n      }\n    };\n\n    while (this.reader.current() && this.reader.current() !== \"}\") {\n      if (this.reader.current() === \"{\") {\n        this.reader.advance();\n        values.push(this.parseVectorContents());\n      } else if (this.reader.current() === \",\") {\n        pushCurrentValue();\n        this.reader.advance();\n      } else if (/[\\s\\t\\n\\r]/.test(this.reader.current()!)) {\n        pushCurrentValue();\n        this.reader.advance();\n      } else {\n        currentValue += this.reader.current();\n        this.reader.advance();\n      }\n    }\n\n    pushCurrentValue();\n\n    if (this.reader.current() === \"}\") {\n      this.reader.advance();\n    } else {\n      throw new ParseError(\"Expected } in vector\", this.reader.line);\n    }\n\n    return values;\n  }\n\n  private parseVector(): Vector {\n    this.reader.advance(); // Skip opening brace\n    return this.parseVectorContents();\n  }\n\n  private parseValue(): GameValue {\n    this.reader.skipWhitespace();\n\n    if (!this.reader.current()) {\n      throw new ParseError(\"Unexpected end of input while parsing value\", this.reader.line);\n    }\n\n    if (this.reader.current() === \"{\") {\n      return this.parseVector();\n    } else if (this.reader.current() === '\"') {\n      return this.parseString();\n    } else {\n      // Parse until semicolon or whitespace\n      let result = \"\";\n      while (this.reader.current() && !/[\\s\\t\\n\\r;]/.test(this.reader.current()!)) {\n        result += this.reader.current();\n        this.reader.advance();\n      }\n      return result;\n    }\n  }\n\n  private parseProperty(): { name: string; value: GameValue } {\n    this.reader.skipWhitespace();\n\n    const name = this.parseIdentifier();\n\n    this.reader.skipWhitespace();\n    if (this.reader.current() !== \"=\") {\n      throw new ParseError(`Expected = after property name \"${name}\"`, this.reader.line);\n    }\n    this.reader.advance();\n\n    const value = this.parseValue();\n\n    // Handle optional semicolon\n    this.reader.skipWhitespace();\n    if (this.reader.current() === \";\") this.reader.advance();\n\n    return { name, value };\n  }\n\n  private parseObject(): GameObject {\n    this.reader.skipWhitespace();\n\n    const name = this.parseIdentifier();\n\n    this.reader.skipWhitespace();\n    if (this.reader.current() !== \"{\") {\n      throw new ParseError(`Expected { after object name \"${name}\"`, this.reader.line);\n    }\n    this.reader.advance();\n\n    const properties: Record<string, GameValue> = {};\n    while (this.reader.current() && this.reader.current() !== \"}\") {\n      const { name: propName, value } = this.parseProperty();\n      properties[propName] = value;\n      this.reader.skipWhitespace();\n    }\n\n    if (this.reader.current() !== \"}\") {\n      throw new ParseError(`Expected } to close object \"${name}\"`, this.reader.line);\n    }\n    this.reader.advance();\n\n    // Handle optional semicolon after closing brace\n    this.reader.skipWhitespace();\n    if (this.reader.current() === \";\") this.reader.advance();\n\n    return {\n      type: name,\n      properties,\n    };\n  }\n\n  public parse(): GameObject[] {\n    const objects: GameObject[] = [];\n\n    // @ts-expect-error it seems okay to do this\n    while (this.reader.pos < this.reader.input.length) {\n      this.reader.skipWhitespace();\n      if (!this.reader.current()) break;\n\n      objects.push(this.parseObject());\n    }\n\n    return objects;\n  }\n\n  public getPosition(): ParserPosition {\n    return this.reader.getPosition();\n  }\n}\n","import { Quaternion } from \"./types\";\n\nexport function generateCircle(\n  _config: Partial<Config> = {}\n): Array<CircleEntry> {\n  const config = {\n    name: \"Audience_4\",\n    count: 10,\n    radius: 90,\n    uniform_scale: 0.2,\n    centerLoc: { x: 248.844, y: -45.5154, z: 1096.15 },\n    quat: { w: 1, x: 0, y: 0, z: 0 },\n    ..._config\n  };\n\n  const result: Array<CircleEntry> = [];\n  \n  for (let i = 0; i < config.count; i++) {\n    // Position around the circle\n    const angle = (i / config.count) * 2 * Math.PI;\n    \n    // Calculate base position in the XY plane\n    const localX = config.radius * Math.cos(angle);\n    const localY = config.radius * Math.sin(angle);\n    const localZ = 0;\n    \n    // Apply quaternion rotation to the offset\n    // Use the base quaternion to rotate the offset points\n    const rotatedOffset = rotatePointByQuaternion(\n      { x: localX, y: localY, z: localZ }, \n      config.quat\n    );\n    \n    // Calculate the facing quaternion (tangential to circle)\n    const facingAngle = angle + Math.PI/2;\n    const zRotQuat = {\n      w: Math.cos(facingAngle / 2),\n      x: 0,\n      y: 0,\n      z: Math.sin(facingAngle / 2)\n    };\n    \n    // Combine the base quaternion with the facing rotation\n    const facingQuat = multiplyQuaternions(config.quat, zRotQuat);\n    \n    // Round values for precision\n    const offset = {\n      x: roundZero(roundThousandth(rotatedOffset.x)),\n      y: roundZero(roundThousandth(rotatedOffset.y)),\n      z: roundZero(roundThousandth(rotatedOffset.z))\n    };\n    \n    const roundedQuat = {\n      w: roundZero(facingQuat.w),\n      x: roundZero(facingQuat.x),\n      y: roundZero(facingQuat.y),\n      z: roundZero(facingQuat.z)\n    };\n    \n    result.push({\n      name: config.name,\n      loc: config.centerLoc,\n      uniform_scale: config.uniform_scale,\n      quat: roundedQuat,\n      offset: offset\n    });\n  }\n\n  return result;\n}\n\n// Rotate a point using a quaternion\nfunction rotatePointByQuaternion(\n  point: {x: number, y: number, z: number}, \n  q: Quaternion\n): {x: number, y: number, z: number} {\n  // Convert point to quaternion form (w=0)\n  const pointQuat = { w: 0, x: point.x, y: point.y, z: point.z };\n  \n  // q * point * q^-1\n  const qInv = {\n    w: q.w,\n    x: -q.x,\n    y: -q.y,\n    z: -q.z\n  };\n  \n  const rotated = multiplyQuaternions(\n    multiplyQuaternions(q, pointQuat),\n    qInv\n  );\n  \n  return { x: rotated.x, y: rotated.y, z: rotated.z };\n}\n\n// Quaternion multiplication function\nfunction multiplyQuaternions(q1: Quaternion, q2: Quaternion): Quaternion {\n  return {\n    w: q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z,\n    x: q1.w * q2.x + q1.x * q2.w + q1.y * q2.z - q1.z * q2.y,\n    y: q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x,\n    z: q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w\n  };\n}\n\n// Round to 3 decimal places (thousandths)\nfunction roundThousandth(num: number): number {\n  return Math.round(num * 1000) / 1000;\n}\n\n// Round very small values to zero\nfunction roundZero(num: number, epsilon = 1e-12): number {\n  return Math.abs(num) < epsilon ? 0 : num;\n}\n\nexport interface CircleEntry {\n  name: string;\n  loc: {x: number, y: number, z: number};\n  quat: {w: number, x: number, y: number, z: number};\n  offset: {x: number, y: number, z: number};\n  uniform_scale: number;\n}\n\ninterface Config {\n  name: string;\n  count: number;\n  radius: number;\n  centerLoc: { x: number, y: number, z: number };\n  quat: Quaternion;\n  uniform_scale: number;\n}","import { CircleEntry } from \"./generateCircle\";\n\nexport function circleToString(circle: Array<CircleEntry>): string {\n  return circle.map((entry) => {\n    return `${entry.name} {\nuniform_scale = ${entry.uniform_scale.toFixed(3)};\nloc = {${entry.loc.x}, ${entry.loc.y}, ${entry.loc.z}};\nlevel_inclusion_mask = -1;\noffset = {${entry.offset.x.toFixed(3)}, ${entry.offset.y.toFixed(3)}, ${entry.offset.z.toFixed(3)}};\nquat = {${entry.quat.w.toFixed(6)}, {${entry.quat.x.toFixed(6)}, ${entry.quat.y.toFixed(6)}, ${entry.quat.z.toFixed(6)}}};\nmelt_height = 0;\n};`}).join(\"\\n\\n\");\n}\n","import { GameConfigParser, circleToString, generateCircle } from \"dat-analyze/src/exports\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function (): void {\n  const generateBtn = document.getElementById(\"generate\") as HTMLButtonElement;\n  const copyBtn = document.getElementById(\n    \"copyToClipboard\"\n  ) as HTMLButtonElement;\n  const outputTextarea = document.getElementById(\n    \"outputResult\"\n  ) as HTMLTextAreaElement;\n\n  document\n    .getElementById(\"themeToggle\")!\n    .addEventListener(\"click\", toggleDarkMode);\n\n  generateBtn.addEventListener(\"click\", handleGenerate);\n\n  function handleGenerate() {\n    const outputStatus = document.getElementById(\"outputStatus\") as HTMLDivElement;\n    const selectObjectNameElement = document.getElementById(\n      \"selectObjectName\"\n    ) as HTMLSelectElement;\n\n    const selectedObjectName = selectObjectNameElement.value;\n\n    const radius = (document.getElementById(\"radiusValue\") as HTMLInputElement)\n      .value;\n    const numObjects = (\n      document.getElementById(\"numObjectsValue\") as HTMLInputElement\n    ).value;\n    const uniformScale = (\n      document.getElementById(\"uniformScaleValue\") as HTMLInputElement\n    ).value;\n\n    const inputData = (\n      document.getElementById(\"inputObjects\") as HTMLTextAreaElement\n    ).value;\n\n    try {\n      const parser = new GameConfigParser(inputData ?? \"\");\n      const objects = parser.parse();\n  \n      const outputItems: Array<string> = [];\n      let totalObjects = 0;\n      for (const object of objects) {\n        const myObject = object.properties as unknown as ObjectProperties;\n        const circle = generateCircle({\n          name: selectedObjectName,\n          radius: parseFloat(radius),\n          centerLoc: {x: parseFloat(myObject.loc[0]), y: parseFloat(myObject.loc[1]), z: parseFloat(myObject.loc[2])},\n          count: parseInt(numObjects),\n          uniform_scale: parseFloat(uniformScale),\n          quat: { w: parseFloat(myObject.quat[0]), x: parseFloat(myObject.quat[1][0]), y: parseFloat(myObject.quat[1][1]), z: parseFloat(myObject.quat[1][2])}\n        });\n        outputItems.push(circleToString(circle));\n        totalObjects += circle.length;\n      }\n      outputTextarea.value = outputItems.join(\"\\n\\n\");\n      outputStatus.innerText = `Generated ${totalObjects} objects.`;\n    } catch (e) {\n      outputStatus.innerText = `Error: ${e}`;\n      throw e;\n    }\n  }\n\n  copyBtn.addEventListener(\"click\", function (): void {\n    outputTextarea.select();\n    document.execCommand(\"copy\");\n\n    const originalText = this.textContent as string;\n    this.textContent = \"Copied!\";\n    this.classList.add(\"text-green-600\", \"dark:text-green-400\");\n\n    setTimeout(() => {\n      this.textContent = originalText;\n      this.classList.remove(\"text-green-600\", \"dark:text-green-400\");\n    }, 2000);\n  });\n});\n\nfunction toggleDarkMode(): void {\n  const html = document.documentElement;\n  html.classList.toggle(\"dark\");\n  localStorage.setItem(\"darkMode\", html.classList.contains(\"dark\").toString());\n}\n\ninterface ObjectProperties {\n  uniform_scale: string;\n  loc: [string, string, string];\n  quat: [string, [string, string, string]];\n}"],"mappings":"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"}