{"version":3,"file":"analyzeReplay-C_RqDkrL.js","names":["levels: ParsedLevels | undefined","p1: PositionXYZ","p2: PositionXYZ","plane: Plane","segment: LineSegment","plane: PlaneWithNormal","rows: Array<RowData>","result: Array<LevelPlaneCollision>","levelPlaneCollision: LevelPlaneCollision","analyzeResult: AnalyzeResult","levelPlaneCollisionGroups: Array<LevelPlaneCollisionGroup>","levelScores: Array<LevelScore>","scoreData: ScoreData","levelPlaneCollisionGroup: LevelPlaneCollisionGroup","objectName: string","collision: PlaneCollisionInfo | undefined","levelName: string","rows: Array<RowData>","replayStartPos: PositionXYZ","data: Uint8Array","options?: AnalyzeReplayOptions","result: AnalyzeResult","endNameAddr: number","block1: number","block2: number","firstBlockOffset: number","blockData: Uint8Array","timingDataFromHeader: TimingDataFromHeader","coordinateData: CoordinateData","rotation3x3: Array<Array<number>>","rowData: number[]","blockIndex: number"],"sources":["../../../analyze/src/types.ts","../../../analyze/src/LevelData/levelData.json","../../../analyze/src/LevelData/levels.ts","../../../analyze/src/PlaneUtil/distanceUtil.ts","../../../analyze/src/PlaneUtil/planeUtil.ts","../../../analyze/src/PlaneUtil/getPlaneCollisions.ts","../../../analyze/src/PlaneUtil/scoreTrack.ts","../../../analyze/src/analyzeReplay.ts"],"sourcesContent":["import { EveryLevelScoredData } from \"./PlaneUtil/types\";\r\n\r\nexport interface AnalyzeResult {\r\n  playerName: string;\r\n  trackName: string | undefined;\r\n\r\n  // timing\r\n  displayedMs: number;\r\n  startMs: number;\r\n  totalMs: number;\r\n\r\n  lagBeforeStartMs: number;\r\n  lagAfterFinishMs: number;\r\n  recordingMs: number;\r\n\r\n  checkpoint1Ms: number;\r\n  timingDataFromHeader: TimingDataFromHeader;\r\n\r\n  coords?: CoordinateData;\r\n  trackScoreData?: EveryLevelScoredData;\r\n  data: Uint8Array;\r\n}\r\n\r\nexport interface CoordinateData {\r\n  rows: Array<RowData>;\r\n}\r\n\r\nexport interface RowData {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  rotation3x3: Array<Array<number>>;\r\n}\r\n\r\nexport interface TimingDataFromHeader {\r\n  totalRecordingTimeMs: number;\r\n  crossStartPlusStartDelayMs: number;\r\n  checkpoint1TotalMs: number;\r\n  totalTimeToFinishMs: number;\r\n}\r\n\r\nexport interface AnalyzeReplayOptions {\r\n  skipCoords: boolean;\r\n}\r\n\r\nexport const UNKNOWN_TRACK = \"Unknown Track\";\r\n","{\r\n  \"AlpineEasy\": [\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 524.914978,\r\n        \"y\": -72.053261,\r\n        \"z\": 1609.72998\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 469.625,\r\n        \"y\": -50.83231,\r\n        \"z\": 1613.47998\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 645.16803,\r\n        \"y\": -831.709106,\r\n        \"z\": 110.084\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 486.019012,\r\n        \"y\": -535.026123,\r\n        \"z\": 676.150024\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.931603,\r\n        \"x\": 0,\r\n        \"y\": -0.363478,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 642.710999,\r\n        \"y\": -841.440308,\r\n        \"z\": 97.760902\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 642.682007,\r\n        \"y\": -839.661926,\r\n        \"z\": 100.323997\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 644.471008,\r\n        \"y\": -839.745483,\r\n        \"z\": 100.343002\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 641.054993,\r\n        \"y\": -839.763367,\r\n        \"z\": 100.378998\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 640.877991,\r\n        \"y\": -841.469482,\r\n        \"z\": 97.952599\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 642.987976,\r\n        \"y\": -843.000122,\r\n        \"z\": 95.099403\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 643.051025,\r\n        \"y\": -844.409241,\r\n        \"z\": 92.487297\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 641.125,\r\n        \"y\": -844.462646,\r\n        \"z\": 92.621201\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 641.103027,\r\n        \"y\": -843.025818,\r\n        \"z\": 95.214104\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 645.038025,\r\n        \"y\": -844.440796,\r\n        \"z\": 92.780098\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 644.825989,\r\n        \"y\": -843.063599,\r\n        \"z\": 95.252403\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 644.745972,\r\n        \"y\": -841.444153,\r\n        \"z\": 97.939796\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1.396,\r\n      \"position\": {\r\n        \"x\": 620.690979,\r\n        \"y\": 372.30188,\r\n        \"z\": 2564.110107\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    }\r\n  ],\r\n  \"AlpineHard\": [\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 645.16803,\r\n        \"y\": -831.709106,\r\n        \"z\": 110.084\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 642.710999,\r\n        \"y\": -841.440308,\r\n        \"z\": 97.760902\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 642.682007,\r\n        \"y\": -839.661926,\r\n        \"z\": 100.323997\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 644.471008,\r\n        \"y\": -839.745483,\r\n        \"z\": 100.343002\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 641.054993,\r\n        \"y\": -839.763367,\r\n        \"z\": 100.378998\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 640.877991,\r\n        \"y\": -841.469482,\r\n        \"z\": 97.952599\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 642.987976,\r\n        \"y\": -843.000122,\r\n        \"z\": 95.099403\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 643.051025,\r\n        \"y\": -844.409241,\r\n        \"z\": 92.487297\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 641.125,\r\n        \"y\": -844.462646,\r\n        \"z\": 92.621201\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 641.103027,\r\n        \"y\": -843.025818,\r\n        \"z\": 95.214104\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 645.038025,\r\n        \"y\": -844.440796,\r\n        \"z\": 92.780098\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 644.825989,\r\n        \"y\": -843.063599,\r\n        \"z\": 95.252403\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 644.745972,\r\n        \"y\": -841.444153,\r\n        \"z\": 97.939796\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 1051.060059,\r\n        \"y\": 68.596832,\r\n        \"z\": 1590.109985\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.9987,\r\n        \"x\": 0,\r\n        \"y\": 0.0509779,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 637.55603,\r\n        \"y\": -585.382996,\r\n        \"z\": 606.434998\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 1119.880005,\r\n        \"y\": 543.206604,\r\n        \"z\": 2291.780029\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    }\r\n  ],\r\n  \"AlpineMedium\": [\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 645.16803,\r\n        \"y\": -831.709106,\r\n        \"z\": 110.084\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 642.710999,\r\n        \"y\": -841.440308,\r\n        \"z\": 97.760902\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 642.682007,\r\n        \"y\": -839.661926,\r\n        \"z\": 100.323997\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 644.471008,\r\n        \"y\": -839.745483,\r\n        \"z\": 100.343002\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 641.054993,\r\n        \"y\": -839.763367,\r\n        \"z\": 100.378998\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 640.877991,\r\n        \"y\": -841.469482,\r\n        \"z\": 97.952599\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 642.987976,\r\n        \"y\": -843.000122,\r\n        \"z\": 95.099403\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 643.051025,\r\n        \"y\": -844.409241,\r\n        \"z\": 92.487297\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 641.125,\r\n        \"y\": -844.462646,\r\n        \"z\": 92.621201\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 641.103027,\r\n        \"y\": -843.025818,\r\n        \"z\": 95.214104\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 645.038025,\r\n        \"y\": -844.440796,\r\n        \"z\": 92.780098\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 644.825989,\r\n        \"y\": -843.063599,\r\n        \"z\": 95.252403\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 644.745972,\r\n        \"y\": -841.444153,\r\n        \"z\": 97.939796\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999982,\r\n        \"x\": 0,\r\n        \"y\": -0.00600007,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 608.411011,\r\n        \"y\": -551.169128,\r\n        \"z\": 654.901001\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.996218,\r\n        \"x\": 0,\r\n        \"y\": 0.0868903,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1.396,\r\n      \"position\": {\r\n        \"x\": 620.711975,\r\n        \"y\": 372.307526,\r\n        \"z\": 2564.129883\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 718.445007,\r\n        \"y\": -147.717392,\r\n        \"z\": 1429.160034\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.993846,\r\n        \"x\": 0,\r\n        \"y\": 0.110772,\r\n        \"z\": 0\r\n      }\r\n    }\r\n  ],\r\n  \"ForestEasy\": [\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 534.888,\r\n        \"y\": -284.277588,\r\n        \"z\": 2313.639893\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 519.367981,\r\n        \"y\": -1384.164185,\r\n        \"z\": 99.7817\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 671.789978,\r\n        \"y\": -631.825745,\r\n        \"z\": 1691.939941\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.996721,\r\n        \"x\": 0,\r\n        \"y\": -0.0809115,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 334.958008,\r\n        \"y\": -701.713623,\r\n        \"z\": 1544.140015\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.98965,\r\n        \"x\": 0,\r\n        \"y\": -0.143503,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 259.109985,\r\n        \"y\": -1044.600708,\r\n        \"z\": 872.73999\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.997823,\r\n        \"x\": 0,\r\n        \"y\": 0.0659521,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 507.769989,\r\n        \"y\": -691.222168,\r\n        \"z\": 1560.670044\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.990901,\r\n        \"x\": 0,\r\n        \"y\": 0.13459,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 512.228027,\r\n        \"y\": -1066.99585,\r\n        \"z\": 843.586975\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 526.361023,\r\n        \"y\": -1401.963379,\r\n        \"z\": 52.828701\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 524.234009,\r\n        \"y\": -1401.888062,\r\n        \"z\": 52.872601\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 521.651001,\r\n        \"y\": -1401.730713,\r\n        \"z\": 53.207901\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 528.848999,\r\n        \"y\": -1401.966797,\r\n        \"z\": 52.491501\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999456,\r\n        \"x\": 0,\r\n        \"y\": -0.0329958,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 509.837006,\r\n        \"y\": -1401.014038,\r\n        \"z\": 55.337502\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 513.203979,\r\n        \"y\": -1401.264648,\r\n        \"z\": 54.7066\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 516.369995,\r\n        \"y\": -1401.418091,\r\n        \"z\": 54.133801\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 519.234009,\r\n        \"y\": -1401.579346,\r\n        \"z\": 53.577999\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1.612,\r\n      \"position\": {\r\n        \"x\": 412.575012,\r\n        \"y\": -232.187561,\r\n        \"z\": -64.914001\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 723.994995,\r\n        \"y\": -1124.040405,\r\n        \"z\": 702.659973\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.964567,\r\n        \"x\": 0,\r\n        \"y\": 0.263839,\r\n        \"z\": 0\r\n      }\r\n    }\r\n  ],\r\n  \"ForestHard\": [\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 723.994995,\r\n        \"y\": -1247.439087,\r\n        \"z\": 702.659973\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.964567,\r\n        \"x\": 0,\r\n        \"y\": 0.263839,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 518.552979,\r\n        \"y\": -1535.383911,\r\n        \"z\": 99.917\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1.612,\r\n      \"position\": {\r\n        \"x\": 412.575012,\r\n        \"y\": -257.285614,\r\n        \"z\": -64.914001\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 519.234009,\r\n        \"y\": -1554.089722,\r\n        \"z\": 53.577999\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 516.369995,\r\n        \"y\": -1553.914795,\r\n        \"z\": 54.133801\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 513.203979,\r\n        \"y\": -1553.747314,\r\n        \"z\": 54.7066\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 509.837006,\r\n        \"y\": -1553.481201,\r\n        \"z\": 55.337502\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 528.848999,\r\n        \"y\": -1554.503784,\r\n        \"z\": 52.491501\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999456,\r\n        \"x\": 0,\r\n        \"y\": -0.0329958,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 521.651001,\r\n        \"y\": -1554.250122,\r\n        \"z\": 53.207901\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 524.234009,\r\n        \"y\": -1554.415649,\r\n        \"z\": 52.872601\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 526.361023,\r\n        \"y\": -1554.492065,\r\n        \"z\": 52.828701\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 512.228027,\r\n        \"y\": -1185.055298,\r\n        \"z\": 843.586975\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 507.769989,\r\n        \"y\": -767.855957,\r\n        \"z\": 1560.670044\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.990901,\r\n        \"x\": 0,\r\n        \"y\": 0.13459,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 259.109985,\r\n        \"y\": -1160.998779,\r\n        \"z\": 872.73999\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.997823,\r\n        \"x\": 0,\r\n        \"y\": 0.0659521,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 334.958008,\r\n        \"y\": -779.157715,\r\n        \"z\": 1544.140015\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.98965,\r\n        \"x\": 0,\r\n        \"y\": -0.143503,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 543.77002,\r\n        \"y\": -304.486206,\r\n        \"z\": 2340.919922\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 671.789978,\r\n        \"y\": -702.809082,\r\n        \"z\": 1691.939941\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.996721,\r\n        \"x\": 0,\r\n        \"y\": -0.0809115,\r\n        \"z\": 0\r\n      }\r\n    }\r\n  ],\r\n  \"ForestMedium\": [\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 723.994995,\r\n        \"y\": -1247.439087,\r\n        \"z\": 702.659973\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.964567,\r\n        \"x\": 0,\r\n        \"y\": 0.263839,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 518.552979,\r\n        \"y\": -1535.383911,\r\n        \"z\": 99.917\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1.612,\r\n      \"position\": {\r\n        \"x\": 412.575012,\r\n        \"y\": -257.285614,\r\n        \"z\": -64.914001\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 519.234009,\r\n        \"y\": -1554.089722,\r\n        \"z\": 53.577999\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 516.369995,\r\n        \"y\": -1553.914795,\r\n        \"z\": 54.133801\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 513.203979,\r\n        \"y\": -1553.747314,\r\n        \"z\": 54.7066\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 509.837006,\r\n        \"y\": -1553.481201,\r\n        \"z\": 55.337502\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 528.848999,\r\n        \"y\": -1554.503784,\r\n        \"z\": 52.491501\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999456,\r\n        \"x\": 0,\r\n        \"y\": -0.0329958,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 521.651001,\r\n        \"y\": -1554.250122,\r\n        \"z\": 53.207901\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 524.234009,\r\n        \"y\": -1554.415649,\r\n        \"z\": 52.872601\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 526.361023,\r\n        \"y\": -1554.492065,\r\n        \"z\": 52.828701\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 512.228027,\r\n        \"y\": -1185.055298,\r\n        \"z\": 843.586975\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 507.769989,\r\n        \"y\": -767.855957,\r\n        \"z\": 1560.670044\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.990901,\r\n        \"x\": 0,\r\n        \"y\": 0.13459,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 259.109985,\r\n        \"y\": -1160.998779,\r\n        \"z\": 872.73999\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.997823,\r\n        \"x\": 0,\r\n        \"y\": 0.0659521,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 334.958008,\r\n        \"y\": -779.157715,\r\n        \"z\": 1544.140015\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.98965,\r\n        \"x\": 0,\r\n        \"y\": -0.143503,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 543.77002,\r\n        \"y\": -304.486206,\r\n        \"z\": 2340.919922\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 671.789978,\r\n        \"y\": -702.809082,\r\n        \"z\": 1691.939941\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.996721,\r\n        \"x\": 0,\r\n        \"y\": -0.0809115,\r\n        \"z\": 0\r\n      }\r\n    }\r\n  ],\r\n  \"VillageEasy\": [\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 734.325012,\r\n        \"y\": -461.033691,\r\n        \"z\": 225.824997\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 732.656006,\r\n        \"y\": -461.06723,\r\n        \"z\": 225.498001\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 731.10199,\r\n        \"y\": -461.079224,\r\n        \"z\": 225.306\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 729.349976,\r\n        \"y\": -461.088135,\r\n        \"z\": 225.104996\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 727.888,\r\n        \"y\": -461.091522,\r\n        \"z\": 225\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 726.346985,\r\n        \"y\": -461.093994,\r\n        \"z\": 224.899994\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 724.721008,\r\n        \"y\": -461.095154,\r\n        \"z\": 224.837006\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 722.926025,\r\n        \"y\": -461.089417,\r\n        \"z\": 224.729996\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 490.509003,\r\n        \"y\": -283.806305,\r\n        \"z\": 607.773987\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 430.776001,\r\n        \"y\": 738.914917,\r\n        \"z\": 2657.77002\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 729.526978,\r\n        \"y\": -457.720856,\r\n        \"z\": 231.772003\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 432.812012,\r\n        \"y\": 268.643463,\r\n        \"z\": 1832\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 547.317017,\r\n        \"y\": 265.436798,\r\n        \"z\": 1833.48999\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 250,\r\n        \"y\": 271.255768,\r\n        \"z\": 1832\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 130,\r\n        \"y\": 266.659546,\r\n        \"z\": 1832\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    }\r\n  ],\r\n  \"VillageHard\": [\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 433.334015,\r\n        \"y\": -513.037354,\r\n        \"z\": 96.240799\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 435.20401,\r\n        \"y\": -513.162476,\r\n        \"z\": 95.375198\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 437.582001,\r\n        \"y\": -513.566772,\r\n        \"z\": 94.366997\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 440.243988,\r\n        \"y\": -513.761963,\r\n        \"z\": 93.888298\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 442.778015,\r\n        \"y\": -513.983032,\r\n        \"z\": 93.335999\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 248.843994,\r\n        \"y\": -45.584229,\r\n        \"z\": 1096.150024\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 276.050995,\r\n        \"y\": -274.875824,\r\n        \"z\": 464.118011\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.962966,\r\n        \"x\": 0,\r\n        \"y\": -0.269621,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 439.385986,\r\n        \"y\": -501.645935,\r\n        \"z\": 114.804001\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 211.158005,\r\n        \"y\": 292.066498,\r\n        \"z\": 1897.359985\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 449.298004,\r\n        \"y\": -513.57428,\r\n        \"z\": 94.264702\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 447.554993,\r\n        \"y\": -513.726257,\r\n        \"z\": 93.949699\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 444.868011,\r\n        \"y\": -513.97467,\r\n        \"z\": 93.357101\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    }\r\n  ],\r\n  \"VillageMedium\": [\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 595.789978,\r\n        \"y\": -145.276123,\r\n        \"z\": 827.879028\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Start_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 801,\r\n        \"y\": -481.165039,\r\n        \"z\": 299.283997\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 852.960022,\r\n        \"y\": -109.809311,\r\n        \"z\": 847.317993\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 954.27002,\r\n        \"y\": 387.389771,\r\n        \"z\": 1827.089966\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.966132,\r\n        \"x\": 0,\r\n        \"y\": 0.258047,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 334.089996,\r\n        \"y\": 404.545593,\r\n        \"z\": 1607.920044\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 605.559998,\r\n        \"y\": 1014.658264,\r\n        \"z\": 2583.449951\r\n      },\r\n      \"quat\": {\r\n        \"w\": 0.999118,\r\n        \"x\": 0,\r\n        \"y\": -0.0419877,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 562.330017,\r\n        \"y\": 1013.05835,\r\n        \"z\": 2580.01001\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Finish_Point\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 661.130005,\r\n        \"y\": 1013.058411,\r\n        \"z\": 2589.110107\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 805.97998,\r\n        \"y\": -484.148041,\r\n        \"z\": 291.459991\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 808.049988,\r\n        \"y\": -484.111481,\r\n        \"z\": 291.584015\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 799.973999,\r\n        \"y\": -484.205536,\r\n        \"z\": 290.96701\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 798.021973,\r\n        \"y\": -484.156891,\r\n        \"z\": 291.47699\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 795.872986,\r\n        \"y\": -484.126862,\r\n        \"z\": 291.640015\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 793.724976,\r\n        \"y\": -484.082977,\r\n        \"z\": 291.743011\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 801.661987,\r\n        \"y\": -484.198792,\r\n        \"z\": 291.009003\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Player_Start_Location\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 803.802979,\r\n        \"y\": -484.175079,\r\n        \"z\": 291.208008\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 15,\r\n        \"y\": 314.300995,\r\n        \"z\": 1607.920044\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 1032.959961,\r\n        \"y\": -148.53656,\r\n        \"z\": 847.317993\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_1\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 1200,\r\n        \"y\": -192.438019,\r\n        \"z\": 847.317993\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 1400,\r\n        \"y\": 347.761963,\r\n        \"z\": 1827.089966\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"Check_Point_2\",\r\n      \"uniform_scale\": 1,\r\n      \"position\": {\r\n        \"x\": 1576,\r\n        \"y\": 349.224152,\r\n        \"z\": 1827.089966\r\n      },\r\n      \"quat\": {\r\n        \"w\": 1,\r\n        \"x\": 0,\r\n        \"y\": 0,\r\n        \"z\": 0\r\n      }\r\n    }\r\n  ]\r\n}","import { LevelDataEntry } from \"./types\";\r\nimport levelData from \"../LevelData/levelData.json\"\r\n\r\ntype ParsedLevels = Array<{name: string, entries: Array<LevelDataEntry>}>;\r\n\r\nlet levels: ParsedLevels | undefined = undefined;\r\nexport function getLevels(): ParsedLevels {\r\n  if (!levels) {\r\n    levels = [];\r\n    for (const [k, v] of Object.entries(levelData)) {\r\n      levels.push({\r\n        name: k,\r\n        entries: v as Array<LevelDataEntry>,\r\n      });\r\n      // for performance testing, we can duplicate the levels\r\n      // for (let i = 0; i < 5; ++i) {\r\n      //   levels.push({name: k + i, entries: v as Array<LevelDataEntry>});\r\n      // }\r\n    }\r\n  }\r\n  return levels;\r\n}\r\n","import { PositionXYZ } from \"../generateCircle/types\";\r\n\r\nexport function calculateDistance(p1: PositionXYZ, p2: PositionXYZ): number {\r\n  const dx = p2.x - p1.x;\r\n  const dy = p2.y - p1.y;\r\n  const dz = p2.z - p1.z;\r\n  \r\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\r\n}","import type { Plane, PositionXYZ, LineSegment } from \"../generateCircle/types\";\r\n\r\nexport function doesLineSegmentCollideWithPlane(plane: Plane, segment: LineSegment): PositionXYZ | undefined {\r\n  return doesLineSegmentCollideWithPlaneWithNormal({...plane, normal: getPlaneNormal(plane)}, segment);\r\n}\r\n\r\nexport interface PlaneWithNormal extends Plane {\r\n  normal: PositionXYZ;\r\n}\r\n\r\n// 100% of exits go through e5, but some early exits are left in anyways.\r\n// export const tracing = {e1: 0, e2: 0, e3: 0, e4: 0, e5: 0};\r\nexport function doesLineSegmentCollideWithPlaneWithNormal(plane: PlaneWithNormal, segment: LineSegment): PositionXYZ | undefined {\r\n  const { normal } = plane;\r\n  const normalLength = Math.sqrt(normal.x * normal.x + normal.y * normal.y + normal.z * normal.z);\r\n  if (normalLength < 1e-6) {\r\n    // tracing.e2++;\r\n    return undefined;\r\n  }\r\n\r\n  const normalizedNormal = {\r\n    x: normal.x / normalLength,\r\n    y: normal.y / normalLength,\r\n    z: normal.z / normalLength,\r\n  };\r\n\r\n  const direction = {\r\n    x: segment.p2.x - segment.p1.x,\r\n    y: segment.p2.y - segment.p1.y,\r\n    z: segment.p2.z - segment.p1.z,\r\n  };\r\n\r\n  const dotNormalDirection =\r\n    normalizedNormal.x * direction.x + normalizedNormal.y * direction.y + normalizedNormal.z * direction.z;\r\n\r\n  if (Math.abs(dotNormalDirection) < 1e-6) {\r\n    // tracing.e3++;\r\n    return undefined;\r\n  }\r\n\r\n  const toStart = {\r\n    x: segment.p1.x - plane.position.x,\r\n    y: segment.p1.y - plane.position.y,\r\n    z: segment.p1.z - plane.position.z,\r\n  };\r\n\r\n  const dotNormalToStart =\r\n    normalizedNormal.x * toStart.x + normalizedNormal.y * toStart.y + normalizedNormal.z * toStart.z;\r\n\r\n  const t = -dotNormalToStart / dotNormalDirection;\r\n\r\n  if (t < 0 || t > 1) {\r\n    // If the intersection is outside the segment, return undefined\r\n    // tracing.e4++;\r\n    return undefined;\r\n  }\r\n\r\n  const intersection = {\r\n    x: segment.p1.x + t * direction.x,\r\n    y: segment.p1.y + t * direction.y,\r\n    z: segment.p1.z + t * direction.z,\r\n  };\r\n\r\n  // tracing.e5++;\r\n  return intersection;\r\n}\r\n\r\nexport function getPlaneNormal(plane: Plane): PositionXYZ {\r\n  return {\r\n    x: 2 * (plane.quat.x * plane.quat.z + plane.quat.w * plane.quat.y),\r\n    y: 2 * (plane.quat.y * plane.quat.z - plane.quat.w * plane.quat.x),\r\n    z: 1 - 2 * (plane.quat.x * plane.quat.x + plane.quat.y * plane.quat.y),\r\n  };\r\n}\r\n","\r\nimport { doesLineSegmentCollideWithPlaneWithNormal, getPlaneNormal } from \"../PlaneUtil/planeUtil\";\r\nimport { RowData } from \"../types\";\r\nimport type { LevelPlaneCollision } from \"./types\";\r\nimport { getLevels } from \"../LevelData/levels\";\r\nimport { calculateDistance } from \"./distanceUtil\";\r\n\r\nexport function getPlaneCollisions(rows: Array<RowData>): Array<LevelPlaneCollision> {\r\n  const result: Array<LevelPlaneCollision> = [];\r\n  const rowPositions = rows.map(t => ({ x: t.x, y: t.y, z: t.z }));\r\n  const segments = Array(rows.length-1).fill(0).map((_, i) => ({ p1: rowPositions[i], p2: rowPositions[i+1] }));\r\n  const planeTypes = ['Check_Point_1', 'Check_Point_2', 'Start_Point', 'Finish_Point'];\r\n\r\n  for (const level of getLevels()) {\r\n    const planeEntries = level.entries.filter(t => planeTypes.includes(t.name));\r\n    const planeEntryPlanes = planeEntries.map(t => ({ planeName: t.name, plane: {position: t.position, quat: t.quat, normal: getPlaneNormal(t)}}))\r\n    const levelPlaneCollision: LevelPlaneCollision = {name: level.name, collisions: []};\r\n\r\n    for (let i = 0; i < rows.length - 1; i++) {\r\n      const segment = segments[i];\r\n      for (const { planeName, plane } of planeEntryPlanes) {\r\n        const d1 =\r\n          plane.normal.x * (segment.p1.x - plane.position.x) +\r\n          plane.normal.y * (segment.p1.y - plane.position.y) +\r\n          plane.normal.z * (segment.p1.z - plane.position.z);\r\n        const d2 =\r\n          plane.normal.x * (segment.p2.x - plane.position.x) +\r\n          plane.normal.y * (segment.p2.y - plane.position.y) +\r\n          plane.normal.z * (segment.p2.z - plane.position.z);\r\n        if (d1 * d2 > 0) continue; // both points are on the same side of the plane, no intersection\r\n\r\n        const intersection = doesLineSegmentCollideWithPlaneWithNormal(plane, segment);\r\n        if (intersection !== undefined) {\r\n          levelPlaneCollision.collisions.push({\r\n            intersection,\r\n            distance: calculateDistance(intersection, plane.position),\r\n            p1: segment.p1,\r\n            p2: segment.p2,\r\n            frame1: i,\r\n            frame2: i+1,\r\n            objectName: planeName,\r\n            plane\r\n          });\r\n        }\r\n      }\r\n    }\r\n    result.push(levelPlaneCollision)\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n","import { PositionXYZ } from \"../generateCircle/types\";\r\nimport { getLevels } from \"../LevelData/levels\";\r\nimport { AnalyzeResult, RowData } from \"../types\";\r\nimport { calculateDistance } from \"./distanceUtil\";\r\nimport { getPlaneCollisions } from \"./getPlaneCollisions\";\r\nimport { LevelPlaneCollision as LevelPlaneCollisionGroup, LevelScore, PlaneCollisionInfo, ScoreData, EveryLevelScoredData } from \"./types\";\r\n\r\nexport const PLANE_RADIUS = 90.5;\r\nexport const NEAREST_START_POINT_DIST = 2;\r\nexport const MAX_SCORE = 5;\r\n\r\nexport function getEveryLevelScored(analyzeResult: AnalyzeResult): EveryLevelScoredData {\r\n  const levelPlaneCollisionGroups = getPlaneCollisions(analyzeResult.coords!.rows);\r\n  const levelScores = scoreEveryLevel(analyzeResult, levelPlaneCollisionGroups);\r\n  return { allCollisions: levelPlaneCollisionGroups, levelScores };\r\n}\r\n\r\nfunction scoreEveryLevel(\r\n  analyzeResult: AnalyzeResult,\r\n  levelPlaneCollisionGroups: Array<LevelPlaneCollisionGroup>\r\n): Array<LevelScore> {\r\n  let levelScores: Array<LevelScore> = [];\r\n  for (const levelPlaneCollisionGroup of levelPlaneCollisionGroups) {\r\n    const nearestStartPoint = getNearestPlayerStartLocation(levelPlaneCollisionGroup.name, analyzeResult.coords!.rows);\r\n\r\n    const firstValidStartPointCollision = getValidCollisions(levelPlaneCollisionGroup, \"Start_Point\")?.at(0);\r\n    const firstValidCheckPoint1Collision = getValidCollisions(levelPlaneCollisionGroup, \"Check_Point_1\")?.at(0);\r\n    const firstValidFinishPointCollision = getValidCollisions(levelPlaneCollisionGroup, \"Finish_Point\")?.at(0);\r\n    const allCheckPoint2Collisions = levelPlaneCollisionGroup.collisions.filter((t) => t.objectName === \"Check_Point_2\");\r\n    const validCheckPoint2Collisions = allCheckPoint2Collisions\r\n      .filter(t => t.distance <= PLANE_RADIUS)\r\n      .filter(t => !firstValidStartPointCollision || firstValidStartPointCollision.frame2 <= t.frame1)\r\n      .filter(t => !firstValidCheckPoint1Collision || firstValidCheckPoint1Collision.frame2 <= t.frame1)\r\n      .filter(t => !firstValidFinishPointCollision || t.frame2 <= firstValidFinishPointCollision.frame2);\r\n\r\n    const scoreData: ScoreData = {\r\n      nearestStartDist: nearestStartPoint.dist,\r\n      startPlaneDiffMs: getMsDiff(analyzeResult, firstValidStartPointCollision, \"Start_Point\"),\r\n      checkpoint1DiffMs: getMsDiff(analyzeResult, firstValidCheckPoint1Collision, \"Check_Point_1\"),\r\n      finishPointDiffMs: getMsDiff(analyzeResult, firstValidFinishPointCollision, \"Finish_Point\"),\r\n      checkpoint2Exists: validCheckPoint2Collisions.length > 0,\r\n      firstValidStartPointCollision,\r\n      firstValidCheckPoint1Collision,\r\n      firstValidFinishPointCollision,\r\n      allCheckPoint2Collisions,\r\n      validCheckPoint2Collisions\r\n    };\r\n\r\n    const scoreFlags = getScoreFlags(scoreData);\r\n    const score = Object.values(scoreFlags).filter(t => t).length;\r\n    levelScores.push({ name: levelPlaneCollisionGroup.name, scoreData, score });\r\n  }\r\n\r\n  levelScores = levelScores.sort((a, b) => b.score - a.score);\r\n  return levelScores;\r\n}\r\n\r\nfunction getValidCollisions(\r\n  levelPlaneCollisionGroup: LevelPlaneCollisionGroup,\r\n  objectName: string\r\n): Array<PlaneCollisionInfo> {\r\n  return levelPlaneCollisionGroup.collisions.filter((t) => t.objectName === objectName && t.distance <= PLANE_RADIUS);\r\n}\r\n\r\nexport function getMsDiff(\r\n  analyzeResult: AnalyzeResult,\r\n  collision: PlaneCollisionInfo | undefined,\r\n  objectName: string\r\n): number | undefined {\r\n  if (!collision) return undefined;\r\n  const { crossStartPlusStartDelayMs, totalTimeToFinishMs, checkpoint1TotalMs } = analyzeResult.timingDataFromHeader;\r\n\r\n  switch (objectName) {\r\n    case \"Start_Point\": return collision.frame2 * 10 - crossStartPlusStartDelayMs;\r\n    case \"Check_Point_1\": return collision.frame2 * 10 - checkpoint1TotalMs;\r\n    case \"Finish_Point\": return collision.frame2 * 10 - totalTimeToFinishMs;\r\n    default: throw new Error(`Unhandled ${objectName}`);\r\n  }\r\n}\r\n\r\nfunction getNearestPlayerStartLocation(levelName: string, rows: Array<RowData>) {\r\n  const levelData = getLevels().filter((t) => t.name === levelName);\r\n  if (levelData.length !== 1) {\r\n    throw new Error(`Expected to find only one level with levelName: ${levelName}, found ${levelData.length}`);\r\n  }\r\n\r\n  const entries = levelData[0].entries;\r\n  const startLocations = entries.filter((t) => t.name === \"Player_Start_Location\");\r\n  if (startLocations.length === 0) {\r\n    throw new Error(\"No start locations\");\r\n  }\r\n\r\n  let nearest = startLocations[0];\r\n  const replayStartPos: PositionXYZ = { x: rows[0].x, y: rows[0].y, z: rows[0].z };\r\n  for (const startLocation of startLocations) {\r\n    const pos1 = nearest.position;\r\n    const pos2 = startLocation.position;\r\n    const d1 = calculateDistance(replayStartPos, pos1);\r\n    const d2 = calculateDistance(replayStartPos, pos2);\r\n    if (d2 < d1) {\r\n      nearest = startLocation;\r\n    }\r\n  }\r\n\r\n  const pos = nearest.position;\r\n  const dist = calculateDistance(replayStartPos, pos);\r\n  return {\r\n    gameObject: nearest,\r\n    pos,\r\n    dist,\r\n  };\r\n}\r\n\r\nfunction getScoreFlags(scoreData: ScoreData) {\r\n  return {\r\n    hasPlayerStartLocation: scoreData.nearestStartDist <= NEAREST_START_POINT_DIST,\r\n    hasStartPlane: scoreData.startPlaneDiffMs !== undefined && Math.abs(scoreData.startPlaneDiffMs) <= 10,\r\n    hasCheckPoint1: scoreData.checkpoint1DiffMs !== undefined && Math.abs(scoreData.checkpoint1DiffMs) <= 10,\r\n    hasFinishPoint: scoreData.finishPointDiffMs !== undefined && Math.abs(scoreData.finishPointDiffMs) <= 10,\r\n    hasCheckPoint2: scoreData.checkpoint2Exists,\r\n  };\r\n}\r\n\r\nexport function getScoreBreakdown(scoreData: ScoreData): Array<[string, { valid: boolean }]> {\r\n  const flags = getScoreFlags(scoreData);\r\n  const notes = [];\r\n  notes.push([`Has Player Start Location ≤${NEAREST_START_POINT_DIST}m`, { valid: flags.hasPlayerStartLocation }]);\r\n  notes.push([`Has Start_Point ≤10ms, ≤${PLANE_RADIUS}m`, { valid: flags.hasStartPlane }]);\r\n  notes.push([`Has Check_Point_1 ≤10ms, ≤${PLANE_RADIUS}m`, { valid:flags.hasCheckPoint1 }]);\r\n  notes.push([`Has Finish_Point ≤10ms, ≤${PLANE_RADIUS}m`, { valid: flags.hasFinishPoint }]);\r\n  notes.push([`Has Check_Point_2 ≤${PLANE_RADIUS}m`, { valid: flags.hasCheckPoint2 }]);\r\n  return notes as unknown as Array<[string, { valid: boolean }]>;\r\n}\r\n","import { getEveryLevelScored } from \"./PlaneUtil/scoreTrack\";\r\nimport { AnalyzeReplayOptions, AnalyzeResult, CoordinateData, TimingDataFromHeader, UNKNOWN_TRACK } from \"./types\";\r\n\r\nexport function analyzeReplay(data: Uint8Array, options?: AnalyzeReplayOptions): AnalyzeResult {\r\n  const { playerName, endNameAddr } = readName(data);\r\n  const timingDataFromHeader = getTimingDataFromHeader(data, endNameAddr);\r\n  const displayedMs = timingDataFromHeader.totalTimeToFinishMs - timingDataFromHeader.crossStartPlusStartDelayMs;\r\n\r\n  const lagBeforeStartMs = countSame(data) * 10;\r\n  const startMs = timingDataFromHeader.crossStartPlusStartDelayMs - lagBeforeStartMs;\r\n  const finishDelayMs = timingDataFromHeader.totalRecordingTimeMs - timingDataFromHeader.totalTimeToFinishMs;\r\n\r\n  const result: AnalyzeResult = {\r\n    playerName,\r\n    trackName: UNKNOWN_TRACK,\r\n\r\n    // for FM Matt 54.35\r\n    // 63.78 (total recording time)\r\n    // 6.41  (cross start + start delay)\r\n    // 26.65 (checkpoint 1 total time)\r\n    // 60.76 (total time to finish)\r\n    // 3.40 (startTime)\r\n    displayedMs,\r\n    startMs,\r\n    totalMs: displayedMs + startMs,\r\n\r\n    lagBeforeStartMs: lagBeforeStartMs,\r\n    lagAfterFinishMs: finishDelayMs,\r\n    recordingMs: timingDataFromHeader.totalRecordingTimeMs,\r\n\r\n    checkpoint1Ms: timingDataFromHeader.checkpoint1TotalMs - timingDataFromHeader.crossStartPlusStartDelayMs,\r\n    timingDataFromHeader,\r\n    data\r\n  };\r\n\r\n  if (!options?.skipCoords) {\r\n    const coords = getCoordinateData(data, timingDataFromHeader);\r\n    result.coords = coords;\r\n    const trackScoreData = getEveryLevelScored(result);\r\n    result.trackScoreData = trackScoreData;\r\n    // console.log(result.trackScoreData.everyLevelScored);\r\n    // console.log(result.trackScoreData.allCollisions.filter(t => t.name === 'VillageHard')[0].collisions);\r\n    // console.log(result.trackScoreData.everyLevelScored.filter(t => t.name === \"AlpineMedium\")[0].scoreData)\r\n    const topScore = trackScoreData.levelScores[0].score;\r\n    \r\n    if (topScore !== 0) {\r\n      const topScoring = trackScoreData.levelScores.filter(t => t.score === topScore).map(t => t.name).sort();\r\n      if (topScoring.length === 2 && topScoring[0] === \"ForestHard\" && topScoring[1] === \"ForestMedium\") {\r\n        result.trackName = \"Forest MediumOrHard\";\r\n      } else if (topScoring.length === 1) {\r\n        result.trackName = topScoring[0];\r\n      } else {\r\n        result.trackName = \"UnknownTrack\"\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction readName(data: Uint8Array): { playerName: string; endNameAddr: number } {\r\n  for (let i = 24; i < data.length; ++i) {\r\n    if (data[i] === 0x00) {\r\n      const nameBytes = data.slice(24, i);\r\n      const playerName = new TextDecoder('utf-8').decode(nameBytes);\r\n      return { playerName, endNameAddr: i };\r\n    }\r\n  }\r\n  throw new Error(\"Player name not found in replay data\");\r\n}\r\n\r\nfunction getTimingDataFromHeader(data: Uint8Array, endNameAddr: number): TimingDataFromHeader {\r\n  // for FM Matt 54.35\r\n  // 63.78 (total recording time)\r\n  // 6.41  (cross start + start delay)\r\n  // 26.65 (checkpoint 1 total time)\r\n  // 60.76 (total time to finish)\r\n  return {\r\n    totalRecordingTimeMs: 10 * (data[4] | (data[5] << 8)),\r\n    crossStartPlusStartDelayMs: 10 * (data[endNameAddr + 1] | (data[endNameAddr + 2] << 8)),\r\n    checkpoint1TotalMs: 10 * (data[endNameAddr + 5] | (data[endNameAddr + 6] << 8)),\r\n    totalTimeToFinishMs: 10 * (data[endNameAddr + 9] | (data[endNameAddr + 10] << 8)),\r\n  };\r\n}\r\n\r\nfunction countSame(data: Uint8Array): number {\r\n  const firstBlockOffset = getFirstBlockOffset(data);\r\n  for (let i = firstBlockOffset, count = 1; i < data.length; i += BLOCK_SIZE, count++) {\r\n    if (!blockIsSame(data, i, i + BLOCK_SIZE)) {\r\n      return count;\r\n    }\r\n  }\r\n  throw new Error(\"unreachable\");\r\n}\r\n\r\nfunction blockIsSame(data: Uint8Array, block1: number, block2: number): boolean {\r\n  for (let i = 0; i < BLOCK_SIZE; i++) {\r\n    if (data[block1 + i] !== data[block2 + i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nconst BLOCK_SIZE = 109;\r\n\r\nfunction getFirstBlockOffset(data: Uint8Array): number {\r\n  const { endNameAddr } = readName(data);\r\n  return endNameAddr + 13;\r\n}\r\n\r\nfunction getTotalNumberOfBlocks(data: Uint8Array, firstBlockOffset: number): number {\r\n  return 1 + ((data.length - firstBlockOffset) / BLOCK_SIZE);\r\n}\r\n\r\nfunction getCoordinateData(blockData: Uint8Array, timingDataFromHeader: TimingDataFromHeader): CoordinateData {\r\n  const footerExists = blockData.slice(blockData.length - BLOCK_SIZE, BLOCK_SIZE).every(byte => byte === 0x00);\r\n  const coordinateData: CoordinateData = { rows: [] };\r\n  const dataView = new DataView(blockData.buffer, 0);\r\n\r\n  const firstBlockOffset = getFirstBlockOffset(blockData);\r\n  const totalCoordinateBlocks = getTotalNumberOfBlocks(blockData, firstBlockOffset) - 1 - (footerExists ? 1 : 0);\r\n  const numExpectedBlocks = timingDataFromHeader.totalRecordingTimeMs / 10;\r\n  if (totalCoordinateBlocks !== numExpectedBlocks) {\r\n    console.warn(`Warning: Expected ${numExpectedBlocks} coordinate blocks, but got ${totalCoordinateBlocks}`);\r\n  }\r\n\r\n  const lastBlock = footerExists ? blockData.length - BLOCK_SIZE : blockData.length;\r\n  for (let i = firstBlockOffset; i < lastBlock; i += BLOCK_SIZE) {\r\n    const posOffset = i + 44;\r\n    const matrixOffset = posOffset + 3 * 4;\r\n\r\n    const rotation3x3: Array<Array<number>> = [];\r\n    for (let row = 0; row < 3; row++) {\r\n      const rowData: number[] = [];\r\n      for (let col = 0; col < 3; col++) {\r\n        const offset = matrixOffset + (row * 3 + col) * 4;\r\n        rowData.push(dataView.getFloat32(offset, true));\r\n      }\r\n      rotation3x3.push(rowData);\r\n    }\r\n    const data = {\r\n      x: dataView.getFloat32(posOffset, true),\r\n      y: dataView.getFloat32(posOffset + 4, true),\r\n      z: dataView.getFloat32(posOffset + 2 * 4, true),\r\n      rotation3x3,\r\n    };\r\n    coordinateData.rows.push(data);\r\n  }\r\n  return coordinateData;\r\n}\r\n\r\nexport function getBlock(data: Uint8Array, blockIndex: number): Uint8Array {\r\n  const firstBlockOffset = getFirstBlockOffset(data);\r\n  const blockStart = firstBlockOffset + blockIndex * BLOCK_SIZE;\r\n  const blockEnd = blockStart + BLOCK_SIZE;\r\n  if (blockEnd > data.length) {\r\n    throw new Error(`Block index ${blockIndex} is out of bounds`);\r\n  }\r\n  return data.slice(blockStart, blockEnd);\r\n}"],"mappings":"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"}